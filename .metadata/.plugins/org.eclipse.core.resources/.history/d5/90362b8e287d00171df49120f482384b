#include "MemoryHandler.h"

Memory_Handler::Memory_Handler() {
	// TODO Auto-generated constructor stub

}

bool Memory_Handler::is_valid( std::string key ) {
	if( memory_map.contains( key ) ) {
		return false;
	}
	return true;
}

std::string Memory_Handler::store_value( std::string key, std::string value ) {

	if( is_valid( key ) ) {
		void* value_ptr;

		if( util::is_int( value ) ) {
			int int_val = std::stoi( key );
			value_ptr = &int_val;
		} else if( util::is_float( value ) ) {
			float fl_val = std::stof( value );
			value_ptr = &fl_val;
		} else {
			value_ptr = &value;
		}

		return JSON_Handler::build_msg( false, NEW)
	}
	return JSON_Handler::build_msg( true, error::key_used_err() );
}

Memory_Handler::~Memory_Handler() {
	// TODO Auto-generated destructor stub
}

